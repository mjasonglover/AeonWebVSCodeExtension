export interface FieldDefinition {
  name: string;
  type: string;
  category: 'transaction' | 'user' | 'activity';
  description: string;
  documentation: string;
  maxLength?: number;
}

// Transaction Fields
export const TRANSACTION_FIELDS: FieldDefinition[] = [
  // Core Transaction Fields
  {
    name: 'TransactionNumber',
    type: 'int',
    category: 'transaction',
    description: 'Unique transaction identifier',
    documentation: 'Primary key for the transaction. Automatically generated by the system.'
  },
  {
    name: 'Site',
    type: 'nvarchar',
    maxLength: 20,
    category: 'transaction',
    description: 'Site code',
    documentation: 'Identifies the site/location for multi-site installations.'
  },
  {
    name: 'Username',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'User who created the request',
    documentation: 'Username of the person who submitted this request.'
  },
  {
    name: 'ResearcherUsername',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Researcher username',
    documentation: 'Username of the researcher if different from the submitter.'
  },
  {
    name: 'TransactionStatus',
    type: 'int',
    category: 'transaction',
    description: 'Current status of the request',
    documentation: 'Numeric code representing the transaction status (e.g., Submitted, In Process, Complete).'
  },
  {
    name: 'TransactionDate',
    type: 'datetime',
    category: 'transaction',
    description: 'Date transaction was created',
    documentation: 'The date and time when the transaction was submitted.'
  },
  {
    name: 'CreationDate',
    type: 'datetime',
    category: 'transaction',
    description: 'Date record was created',
    documentation: 'System timestamp when the database record was created.'
  },
  
  // Item Information Fields
  {
    name: 'DocumentType',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Type of document requested',
    documentation: 'Category of the requested material (e.g., Manuscript, Book, Photo).'
  },
  {
    name: 'ItemTitle',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Title of the requested item',
    documentation: 'The main title of the material being requested.'
  },
  {
    name: 'ItemAuthor',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Author or creator of the item',
    documentation: 'Person or organization responsible for creating the item.'
  },
  {
    name: 'ItemSubTitle',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Subtitle of the item',
    documentation: 'Additional title information or subtitle.'
  },
  {
    name: 'ItemDate',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Date of the item',
    documentation: 'Publication or creation date of the requested material.'
  },
  {
    name: 'ItemEdition',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Edition of the item',
    documentation: 'Edition number or statement for the item.'
  },
  {
    name: 'ItemVolume',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Volume or box number',
    documentation: 'Volume number for multi-volume works or box number for archival materials.'
  },
  {
    name: 'ItemIssue',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Issue or copy number',
    documentation: 'Issue number for serials or specific copy information.'
  },
  {
    name: 'ItemPages',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Specific pages requested',
    documentation: 'Page numbers or ranges being requested.'
  },
  {
    name: 'ItemISxN',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'ISBN/ISSN',
    documentation: 'International Standard Book/Serial Number.'
  },
  {
    name: 'ItemCitation',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Citation information',
    documentation: 'Complete citation for the requested item.'
  },
  {
    name: 'ItemNumber',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Item or accession number',
    documentation: 'Unique identifier assigned to the item by the repository.'
  },
  {
    name: 'ItemPlace',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Place of publication',
    documentation: 'City or location where the item was published.'
  },
  {
    name: 'ItemPublisher',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Publisher name',
    documentation: 'Name of the publisher or publishing organization.'
  },
  
  // Location Fields
  {
    name: 'CallNumber',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Call number',
    documentation: 'Library call number for locating the item.'
  },
  {
    name: 'Location',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Collection name or location',
    documentation: 'Physical location or collection where the item is housed.'
  },
  {
    name: 'SubLocation',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Sub-location',
    documentation: 'More specific location information within the collection.'
  },
  
  // Reference Fields
  {
    name: 'ReferenceNumber',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Reference number',
    documentation: 'External reference number for tracking.'
  },
  {
    name: 'EADNumber',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'EAD finding aid number',
    documentation: 'Encoded Archival Description identifier.'
  },
  
  // Service Fields
  {
    name: 'RequestType',
    type: 'nvarchar',
    maxLength: 50,
    category: 'transaction',
    description: 'Type of request',
    documentation: 'Whether this is a Loan or PhotoduplicationRequest.'
  },
  {
    name: 'ScheduledDate',
    type: 'datetime',
    category: 'transaction',
    description: 'Scheduled date for viewing',
    documentation: 'Date and time when the researcher is scheduled to view the materials.'
  },
  {
    name: 'SpecialRequest',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Special requests or notes',
    documentation: 'Any special instructions or requests from the researcher.'
  },
  {
    name: 'Notes',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Personal notes',
    documentation: 'Researcher\'s personal notes about the request.'
  },
  
  // Custom Fields
  {
    name: 'ItemInfo1',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Custom field 1',
    documentation: 'Site-specific custom field for additional item information.'
  },
  {
    name: 'ItemInfo2',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Custom field 2',
    documentation: 'Site-specific custom field for additional item information.'
  },
  {
    name: 'ItemInfo3',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Custom field 3',
    documentation: 'Site-specific custom field for additional item information.'
  },
  {
    name: 'ItemInfo4',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Custom field 4',
    documentation: 'Site-specific custom field for additional item information.'
  },
  {
    name: 'ItemInfo5',
    type: 'nvarchar',
    maxLength: 255,
    category: 'transaction',
    description: 'Custom field 5',
    documentation: 'Site-specific custom field for additional item information.'
  },
  
  // Form Fields
  {
    name: 'WebRequestForm',
    type: 'nvarchar',
    maxLength: 100,
    category: 'transaction',
    description: 'Web form used',
    documentation: 'Name of the web form used to create this request.'
  },
  {
    name: 'RequestLink',
    type: 'string',
    category: 'transaction',
    description: 'Request link identifier',
    documentation: 'Used for linking requests or identifying request relationships.'
  },
  {
    name: 'TransactionLink',
    type: 'string',
    category: 'transaction',
    description: 'Transaction link',
    documentation: 'Links related transactions together.'
  }
];

// User Fields
export const USER_FIELDS: FieldDefinition[] = [
  // Core User Fields
  {
    name: 'Username',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'User login name',
    documentation: 'Primary key - unique identifier for the user.'
  },
  {
    name: 'FirstName',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'User first name',
    documentation: 'The user\'s given name.'
  },
  {
    name: 'LastName',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'User last name',
    documentation: 'The user\'s surname or family name.'
  },
  {
    name: 'PreferredName',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'Preferred name',
    documentation: 'Name the user prefers to be called.'
  },
  
  // Contact Information
  {
    name: 'EmailAddress',
    type: 'nvarchar',
    maxLength: 100,
    category: 'user',
    description: 'Email address',
    documentation: 'Primary email address for the user.'
  },
  {
    name: 'Phone',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'Phone number',
    documentation: 'Primary phone number.'
  },
  {
    name: 'EMailAddress',
    type: 'nvarchar',
    maxLength: 100,
    category: 'user',
    description: 'Email address (alternate)',
    documentation: 'Alternate spelling for email address field.'
  },
  
  // Address Fields
  {
    name: 'Address',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'Street address line 1',
    documentation: 'Primary street address.'
  },
  {
    name: 'Address2',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'Street address line 2',
    documentation: 'Additional address information.'
  },
  {
    name: 'City',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'City',
    documentation: 'City for primary address.'
  },
  {
    name: 'State',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'State/Province',
    documentation: 'State or province for primary address.'
  },
  {
    name: 'Zip',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'ZIP/Postal code',
    documentation: 'ZIP or postal code for primary address.'
  },
  {
    name: 'Country',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'Country',
    documentation: 'Country for primary address.'
  },
  
  // Organization Fields
  {
    name: 'Status',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'User status',
    documentation: 'Current status of the user account (e.g., Active, Inactive).'
  },
  {
    name: 'Department',
    type: 'nvarchar',
    maxLength: 100,
    category: 'user',
    description: 'Department',
    documentation: 'Department or division the user belongs to.'
  },
  {
    name: 'Organization',
    type: 'nvarchar',
    maxLength: 50,
    category: 'user',
    description: 'Organization',
    documentation: 'Organization or institution affiliation.'
  },
  
  // Custom User Fields
  {
    name: 'UserInfo1',
    type: 'nvarchar',
    maxLength: 255,
    category: 'user',
    description: 'Custom user field 1',
    documentation: 'Site-specific custom field for additional user information.'
  },
  {
    name: 'UserInfo2',
    type: 'nvarchar',
    maxLength: 255,
    category: 'user',
    description: 'Custom user field 2',
    documentation: 'Site-specific custom field for additional user information.'
  },
  {
    name: 'UserInfo3',
    type: 'nvarchar',
    maxLength: 255,
    category: 'user',
    description: 'Custom user field 3',
    documentation: 'Site-specific custom field for additional user information.'
  },
  {
    name: 'UserInfo4',
    type: 'nvarchar',
    maxLength: 255,
    category: 'user',
    description: 'Custom user field 4',
    documentation: 'Site-specific custom field for additional user information.'
  },
  {
    name: 'UserInfo5',
    type: 'nvarchar',
    maxLength: 255,
    category: 'user',
    description: 'Custom user field 5',
    documentation: 'Site-specific custom field for additional user information.'
  }
];

// Activity Fields
export const ACTIVITY_FIELDS: FieldDefinition[] = [
  {
    name: 'ID',
    type: 'int',
    category: 'activity',
    description: 'Activity ID',
    documentation: 'Primary key - unique identifier for the activity.'
  },
  {
    name: 'Name',
    type: 'nvarchar',
    maxLength: 100,
    category: 'activity',
    description: 'Activity name',
    documentation: 'Name or title of the activity.'
  },
  {
    name: 'Description',
    type: 'nvarchar',
    maxLength: 255,
    category: 'activity',
    description: 'Activity description',
    documentation: 'Detailed description of the activity.'
  },
  {
    name: 'ActivityType',
    type: 'nvarchar',
    maxLength: 100,
    category: 'activity',
    description: 'Type of activity',
    documentation: 'Category or type of the activity.'
  },
  {
    name: 'BeginDate',
    type: 'datetime',
    category: 'activity',
    description: 'Start date and time',
    documentation: 'When the activity begins.'
  },
  {
    name: 'EndDate',
    type: 'datetime',
    category: 'activity',
    description: 'End date and time',
    documentation: 'When the activity ends.'
  },
  {
    name: 'Location',
    type: 'nvarchar',
    maxLength: 50,
    category: 'activity',
    description: 'Activity location',
    documentation: 'Where the activity takes place.'
  },
  {
    name: 'ActivityStatus',
    type: 'nvarchar',
    maxLength: 255,
    category: 'activity',
    description: 'Activity status',
    documentation: 'Current status of the activity.'
  }
];

// Combine all fields for easy access
export const ALL_FIELDS: FieldDefinition[] = [
  ...TRANSACTION_FIELDS,
  ...USER_FIELDS,
  ...ACTIVITY_FIELDS
];

// Helper functions
export function getFieldsByCategory(category: 'transaction' | 'user' | 'activity'): FieldDefinition[] {
  return ALL_FIELDS.filter(field => field.category === category);
}

export function getFieldByName(fieldName: string): FieldDefinition | undefined {
  return ALL_FIELDS.find(field => field.name.toLowerCase() === fieldName.toLowerCase());
}

export function getFieldNames(): string[] {
  return ALL_FIELDS.map(field => field.name);
}

// Common form actions and types
export const FORM_ACTIONS = {
  Logon: 1,
  RSS: 2,
  Show: 10,
  Submit: 11,
  Search: 12,
  Edit: 20,
  Cancel: 21,
  Delete: 22,
  Approve: 23,
  Exit: 99
};

export const FORM_TYPES = {
  Transaction: 10,
  ElectronicDelivery: 11,
  UserReview: 12,
  OrderEstimate: 13,
  OrderBilling: 14,
  UserInformation: 20,
  UserAccount: 21,
  UserAlert: 22,
  RSSAlerts: 40,
  RSSNotifications: 41,
  SearchDefault: 60
};